export default [{ "title": "breakdown", "syntax": "breakdown(phone, isLD, layout)", "usage": { "commonjs": { "title": "CommonJs", "code": "const breakdown = require('phone-fns/breakdown');" }, "standard": { "title": "Standard", "code": "import breakdown from 'phone-fns/breakdown';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/breakdown/index.js\"></script>" } }, "desc": "Takes a provided phone string and breaks it down into an object of codes", "examples": ["const obj = breakdown('111-222-3333'); // => { areaCode: '111', localCode: '222', lineNumber: '3333' }\rconst obj = breakdown('17875554441111', 'longDistance'); // => { areaCode: '555', localCode: '444', lineNumber: '1111', countryCode: 1787 }\rconst obj = breakdown('555-444-3333 x 8989'); // => { areaCode: '555', localCode: '444', lineNumber: '3333', extension: 8989 }"], "params": [{ "type": { "names": ["String"] }, "description": "The phone number to breakdown", "name": "phone" }, { "type": { "names": ["Boolean"] }, "description": "Boolean setting long distance to true of false", "name": "isLD" }, { "type": { "names": ["String"] }, "description": "The layout from format to find country and extension codes", "name": "layout" }], "returns": [{ "type": { "names": ["Object"] }, "description": "Returns an object of the broken down phone number" }] }, { "title": "find", "syntax": "find(phone, type)", "usage": { "commonjs": { "title": "CommonJs", "code": "const find = require('phone-fns/find');" }, "standard": { "title": "Standard", "code": "import find from 'phone-fns/find';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/find/index.js\"></script>" } }, "desc": "Find a piece of the phone number and return it", "examples": ["const results = find('555-444-1111', 'areaCode'); // => '555'\nconst results = find('555-444-1111', 'localCode'); // => '444'\nconst results = find('555-444-1111', 'lineNumber'); // => '1111'\nconst results = find('1555-444-1111', 'countryCode'); // => '1'\nconst results = find('555-444-1111 8989', 'extension'); // => '8989'"], "params": [{ "type": { "names": ["String"] }, "description": "The phone number to breakdown", "name": "phone" }, { "type": { "names": ["String"] }, "description": "The piece of the phone to look for", "name": "type" }], "returns": [{ "type": { "names": ["String"] }, "description": "Returns a string from the desired part of the phone number" }] }, { "title": "format", "syntax": "format(phone, layout, isLD)", "usage": { "commonjs": { "title": "CommonJs", "code": "const format = require('phone-fns/format');" }, "standard": { "title": "Standard", "code": "import format from 'phone-fns/format';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/format/index.js\"></script>" } }, "desc": "Allows you to format phone numbers however you desire", "examples": ["const results = format('444-555-6666', '(AAA) LLL.NNNN'); // => '(444) 555.6666'\rconst results = format('1444-555-6666', 'C + (AAA) LLL.NNNN', true); // => '1 + (444) 555.6666'\rconst results = format('444-555-66668989', '(AAA) LLL.NNNN x EEEE'); // => '(444) 555.6666 x 8989'"], "params": [{ "type": { "names": ["String"] }, "description": "The phone number to breakdown", "name": "phone" }, { "type": { "names": ["String"] }, "description": "The desired layout of the phone number", "name": "layout" }, { "type": { "names": ["Boolean"] }, "description": "Boolean setting long distance to true of false", "name": "isLD" }], "returns": [{ "type": { "names": ["String"] }, "description": "Returns a string which is the formatted phone number" }] }, { "title": "getCountries", "syntax": "getCountries(code)", "usage": { "commonjs": { "title": "CommonJs", "code": "const getCountries = require('phone-fns/getCountries');" }, "standard": { "title": "Standard", "code": "import getCountries from 'phone-fns/getCountries';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/getCountries/index.js\"></script>" } }, "desc": "Grabs all of the countries (and their alternate names) for the provided country calling code", "examples": ["const results = getCountries('1');\r// => [\r\n\t\t'canada',\r\n\t\t'ca',\r\n\t\t'united states',\r\n\t\t'us',\r\n\t\t'usa',\r\n\t\t'united states of america'\r\n\t\t]"], "params": [{ "type": { "names": ["String"] }, "description": "The country code to use for searching", "name": "code" }], "returns": [{ "type": { "names": ["Array"] }, "description": "Returns an array of country names and their aliases" }] }, { "title": "getCountryCode", "syntax": "getCountryCode(country)", "usage": { "commonjs": { "title": "CommonJs", "code": "const getCountryCode = require('phone-fns/getCountryCode');" }, "standard": { "title": "Standard", "code": "import getCountryCode from 'phone-fns/getCountryCode';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/getCountryCode/index.js\"></script>" } }, "desc": "Grabs the calling code for the provided country from the callingCodes.json", "examples": ["const results = getCountryCode('USA'); // => ['1']"], "params": [{ "type": { "names": ["String"] }, "description": "The country name to search with", "name": "country" }], "returns": [{ "type": { "names": ["Array"] }, "description": "Returns an array of country codes" }] }, { "title": "identical", "syntax": "identical(x, y)", "usage": { "commonjs": { "title": "CommonJs", "code": "const identical = require('phone-fns/identical');" }, "standard": { "title": "Standard", "code": "import identical from 'phone-fns/identical';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/identical/index.js\"></script>" } }, "desc": "Checks if the two provided numbers are identical or not", "examples": ["const results = identical('5554443333', '5554443333'); // => true"], "params": [{ "type": { "names": ["String"] }, "description": "The number to validate against", "name": "x" }, { "type": { "names": ["String"] }, "description": "The number to validate", "name": "y" }], "returns": [{ "type": { "names": ["Boolean"] }, "description": "Returns a boolean if the numbers provided to match" }] }, { "title": "isValid", "syntax": "isValid(phone, country)", "usage": { "commonjs": { "title": "CommonJs", "code": "const isValid = require('phone-fns/isValid');" }, "standard": { "title": "Standard", "code": "import isValid from 'phone-fns/isValid';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/isValid/index.js\"></script>" } }, "desc": "Checks if the phone number is valid or not", "examples": ["const results = isValid('555-444-3333'); // => true\rconst results = isValid('1 + (555) 444 3333', 'usa'); // => true\rconst results = isValid('9885554443333', 'usa'); // => false"], "params": [{ "type": { "names": ["String"] }, "description": "The phone number to breakdown", "name": "phone" }, { "type": { "names": ["String"] }, "description": "The country name to validate with", "name": "country" }], "returns": [{ "type": { "names": ["Boolean"] }, "description": "Returns a boolean if the number provided is valid or not" }] }, { "title": "uglify", "syntax": "uglify(phone)", "usage": { "commonjs": { "title": "CommonJs", "code": "const uglify = require('phone-fns/uglify');" }, "standard": { "title": "Standard", "code": "import uglify from 'phone-fns/uglify';" }, "browser": { "title": "Browser", "code": "<script src=\"path/to/node_modules/phone-fns/uglify/index.js\"></script>" } }, "desc": "Strips all of the special characters from the given string", "examples": ["const results = uglify('555-444-3333'); // => '5554443333'"], "params": [{ "type": { "names": ["String"] }, "description": "The phone number to trim and strip down", "name": "phone" }], "returns": [{ "type": { "names": ["String"] }, "description": "Returns the newly created phone number string" }] }]